INFO  15:10:41,337 - Compiling source file: D:\PP1Projekat\pp1\workspace\test\program.mj
INFO  15:10:41,392 - #2 program
INFO  15:10:41,392 - #23 Program
INFO  15:10:41,392 - #23 int
INFO  15:10:41,394 - #23 a
INFO  15:10:41,394 - #8 =
INFO  15:10:41,394 - #22 3
INFO  15:10:41,395 - #14 ,
INFO  15:10:41,395 - #23 b
INFO  15:10:41,395 - #8 =
INFO  15:10:41,395 - #22 7
INFO  15:10:41,396 - #14 ,
INFO  15:10:41,396 - #23 c
INFO  15:10:41,396 - #18 [
INFO  15:10:41,396 - #20 ]
INFO  15:10:41,396 - #14 ,
INFO  15:10:41,396 - #23 d
INFO  15:10:41,396 - #18 [
INFO  15:10:41,397 - #20 ]
INFO  15:10:41,397 - #5 ;
INFO  15:10:41,397 - #23 bool
INFO  15:10:41,397 - #23 a1
INFO  15:10:41,398 - #14 ,
INFO  15:10:41,398 - #23 b1
INFO  15:10:41,399 - #8 =
INFO  15:10:41,399 - #25 true
INFO  15:10:41,399 - #14 ,
INFO  15:10:41,399 - #23 c1
INFO  15:10:41,400 - #8 =
INFO  15:10:41,400 - #25 false
INFO  15:10:41,400 - #14 ,
INFO  15:10:41,400 - #23 a2
INFO  15:10:41,400 - #8 =
INFO  15:10:41,400 - #25 true
INFO  15:10:41,400 - #5 ;
INFO  15:10:41,400 - #23 char
INFO  15:10:41,401 - #23 b2
INFO  15:10:41,401 - #8 =
INFO  15:10:41,401 - #24 'a'
INFO  15:10:41,401 - #14 ,
INFO  15:10:41,401 - #23 c2
INFO  15:10:41,401 - #8 =
INFO  15:10:41,402 - #24 'b'
INFO  15:10:41,402 - #14 ,
INFO  15:10:41,402 - #23 d2
INFO  15:10:41,402 - #8 =
INFO  15:10:41,402 - #24 'c'
INFO  15:10:41,402 - #5 ;
INFO  15:10:41,403 - #3 {
INFO  15:10:41,403 - #16 void
INFO  15:10:41,404 - #23 main
INFO  15:10:41,405 - #6 (
INFO  15:10:41,405 - #7 )
INFO  15:10:41,405 - #3 {
INFO  15:10:41,406 - #23 a
INFO  15:10:41,408 - #8 =
INFO  15:10:41,408 - #22 3
INFO  15:10:41,409 - #5 ;
INFO  15:10:41,409 - #23 b
INFO  15:10:41,410 - #8 =
INFO  15:10:41,410 - #23 b
INFO  15:10:41,410 - #18 [
INFO  15:10:41,410 - #22 3
INFO  15:10:41,411 - #20 ]
INFO  15:10:41,411 - #26 +
INFO  15:10:41,411 - #22 3
INFO  15:10:41,412 - #5 ;
INFO  15:10:41,412 - #23 c
INFO  15:10:41,412 - #18 [
INFO  15:10:41,413 - #22 7
INFO  15:10:41,413 - #20 ]
INFO  15:10:41,413 - #8 =
INFO  15:10:41,413 - #22 3
INFO  15:10:41,413 - #5 ;
INFO  15:10:41,413 - #23 d
INFO  15:10:41,413 - #18 [
INFO  15:10:41,414 - #22 2
INFO  15:10:41,414 - #20 ]
INFO  15:10:41,414 - #8 =
INFO  15:10:41,414 - #22 3
INFO  15:10:41,414 - #28 *
INFO  15:10:41,414 - #23 d
INFO  15:10:41,415 - #18 [
INFO  15:10:41,415 - #22 2
INFO  15:10:41,415 - #20 ]
INFO  15:10:41,415 - #5 ;
INFO  15:10:41,415 - #4 }
INFO  15:10:41,416 - #4 }
INFO  15:10:41,419 - Prog(
  ProgName(
   Program
  ) [ProgName]
  ProgNameDeclListDerived2(
    ProgNameDeclListDerived2(
      ProgNameDeclListDerived2(
        ProgNameDeclListDerived3(
        ) [ProgNameDeclListDerived3]
        DeclListType(
          TypeAccess(
           int
          ) [TypeAccess]
          DeclListDerived1(
            IIdentDecl(
             a
              NInit(
               3
              ) [NInit]
            ) [IIdentDecl]
            DeclListDerived1(
              IIdentDecl(
               b
                NInit(
                 7
                ) [NInit]
              ) [IIdentDecl]
              DeclListDerived1(
                AIdentDecl(
                 c
                ) [AIdentDecl]
                DeclListDerived2(
                  AIdentDecl(
                   d
                  ) [AIdentDecl]
                ) [DeclListDerived2]
              ) [DeclListDerived1]
            ) [DeclListDerived1]
          ) [DeclListDerived1]
        ) [DeclListType]
      ) [ProgNameDeclListDerived2]
      DeclListType(
        TypeAccess(
         bool
        ) [TypeAccess]
        DeclListDerived1(
          SIdentDecl(
           a1
          ) [SIdentDecl]
          DeclListDerived1(
            IIdentDecl(
             b1
              BInit(
               true
              ) [BInit]
            ) [IIdentDecl]
            DeclListDerived1(
              IIdentDecl(
               c1
                BInit(
                 false
                ) [BInit]
              ) [IIdentDecl]
              DeclListDerived2(
                IIdentDecl(
                 a2
                  BInit(
                   true
                  ) [BInit]
                ) [IIdentDecl]
              ) [DeclListDerived2]
            ) [DeclListDerived1]
          ) [DeclListDerived1]
        ) [DeclListDerived1]
      ) [DeclListType]
    ) [ProgNameDeclListDerived2]
    DeclListType(
      TypeAccess(
       char
      ) [TypeAccess]
      DeclListDerived1(
        IIdentDecl(
         b2
          CInit(
           'a'
          ) [CInit]
        ) [IIdentDecl]
        DeclListDerived1(
          IIdentDecl(
           c2
            CInit(
             'b'
            ) [CInit]
          ) [IIdentDecl]
          DeclListDerived2(
            IIdentDecl(
             d2
              CInit(
               'c'
              ) [CInit]
            ) [IIdentDecl]
          ) [DeclListDerived2]
        ) [DeclListDerived1]
      ) [DeclListDerived1]
    ) [DeclListType]
  ) [ProgNameDeclListDerived2]
  MethodDeclListDerived1(
    MethodDeclListDerived2(
    ) [MethodDeclListDerived2]
    MethodDeclaration(
      MethName(
       main
      ) [MethName]
      VarDeclListDerived2(
      ) [VarDeclListDerived2]
      StatementListDerived1(
        StatementListDerived1(
          StatementListDerived1(
            StatementListDerived1(
              StatementListDerived2(
              ) [StatementListDerived2]
              StatementDerived1(
                Ident(
                 a
                ) [Ident]
                TermExpr(
                  FactorTerm(
                    NumberConst(
                     3
                    ) [NumberConst]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [StatementDerived1]
            ) [StatementListDerived1]
            StatementDerived1(
              Ident(
               b
              ) [Ident]
              AddExpr(
                TermExpr(
                  FactorTerm(
                    FactorDerived4(
                      ArrIdent(
                       b
                        TermExpr(
                          FactorTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [ArrIdent]
                    ) [FactorDerived4]
                  ) [FactorTerm]
                ) [TermExpr]
                Plus(
                 +
                ) [Plus]
                FactorTerm(
                  NumberConst(
                   3
                  ) [NumberConst]
                ) [FactorTerm]
              ) [AddExpr]
            ) [StatementDerived1]
          ) [StatementListDerived1]
          StatementDerived3(
            ArrIdent(
             c
              TermExpr(
                FactorTerm(
                  NumberConst(
                   7
                  ) [NumberConst]
                ) [FactorTerm]
              ) [TermExpr]
            ) [ArrIdent]
            TermExpr(
              FactorTerm(
                NumberConst(
                 3
                ) [NumberConst]
              ) [FactorTerm]
            ) [TermExpr]
          ) [StatementDerived3]
        ) [StatementListDerived1]
        StatementDerived3(
          ArrIdent(
           d
            TermExpr(
              FactorTerm(
                NumberConst(
                 2
                ) [NumberConst]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ArrIdent]
          TermExpr(
            MulTerm(
              FactorTerm(
                NumberConst(
                 3
                ) [NumberConst]
              ) [FactorTerm]
              Mul(
               *
              ) [Mul]
              FactorDerived4(
                ArrIdent(
                 d
                  TermExpr(
                    FactorTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [ArrIdent]
              ) [FactorDerived4]
            ) [MulTerm]
          ) [TermExpr]
        ) [StatementDerived3]
      ) [StatementListDerived1]
    ) [MethodDeclaration]
  ) [MethodDeclListDerived1]
) [Prog]
INFO  15:10:41,419 - ====================================
ERROR 15:10:41,436 - Greska: indexing non array identificator b
	na liniji 8
ERROR 15:10:41,436 - Greska: tipovi operanada operatora + moraju biti tipa int
	na liniji 8
INFO  15:10:41,436 -  Broj print naredbi = 0
INFO  15:10:41,436 -  Deklarisanih promenljivih ima = 11
INFO  15:10:41,436 - ====================================
